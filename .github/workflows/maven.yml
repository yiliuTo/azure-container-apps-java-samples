# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish Petclinic images

on:
  push:
    branches: [ * ]
    path: [ spring-petclinic-microservices/** ]
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: spring-petclinic-microservices

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}
  CUSTOMERS_SERVICE: spring-petclinic-customers-service
  VETS_SERVICE: spring-petclinic-vets-service
  VISITS_SERVICE: spring-petclinic-visits-service
  API_GATEWAY: spring-petclinic-api-gateway

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Clone source repo
        run: |
          git config --global url.https://github.com/.insteadOf git://github.com/
          git clone https://github.com/spring-petclinic/spring-petclinic-microservices.git
      - name: Build with Maven
        run: |
          cd spring-petclinic-microservices
          mvn -B clean package --file pom.xml -DskipTests
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for customers-service
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ env.CUSTOMERS_SERVICE }}
      - name: Build and push customers-service image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: spring-petclinic-microservices/
          path: spring-petclinic-microservices/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: ARTIFACT_NAME=${{ env.CUSTOMERS_SERVICE }}
